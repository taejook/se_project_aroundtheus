!function(){"use strict";class e{constructor(e,t,r,s,o){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteCard=s,this.id=e._id,this.isLiked=e.isLiked,this._handleLikeCard=o}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard(this))),this._cardImageEl.addEventListener("click",(()=>this._handleImageClick(this)))}handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active"),this.isLiked=!this.isLiked}handleDelete(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class s extends r{constructor(e,t){let{popupSelector:r}=e;super({popupSelector:r}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputElements=this._popupForm.querySelectorAll(".modal__input"),this._buttonElement=this._popupForm.querySelector(".modal__button")}open(){super.open()}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}renderLoading(e){this._buttonElement.textContent=e?"Saving...":"Save"}}class o{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}document.querySelectorAll(".modal__form");const i=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-edit-modal"),a=document.querySelector("#avatar-edit-modal"),l=document.querySelector("#add-card-modal"),d=document.querySelector("#preview-image-modal"),c=a.querySelector(".modal__form"),u=document.querySelector(".profile__image-button"),h=(n.querySelector("#profile-modal-close"),l.querySelector("#add-card-modal-close"),d.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-edit-form")),_=l.querySelector("#add-card-form"),m=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button"),document.querySelector("#profile-title-input")),p=document.querySelector("#profile-description-input"),E=(_.querySelector(".modal__input_type_title"),_.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),document.querySelector(".profile__add-button")),S={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},v=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}fetchUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteInitialCards(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"PUT"}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"41597df2-eb93-4b41-8bf1-f4a542a9ea54","Content-Type":"application/json"}}),f=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-description")}open(e){super.open(),this._image.setAttribute("src",e._link),this._image.setAttribute("alt",e._name),this._caption.textContent=e._name}}({popupSelector:"#preview-image-modal"}),b=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}setEventListeners(){this._popupElement.querySelector(".modal__button").addEventListener("click",(()=>{this._handleDelete()})),super.setEventListeners()}setSubmitAction(e){this._handleDelete=e}}({popupSelector:"#delete-card-modal"}),y=new class{constructor(e,t,r){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.about}setAvatar(e){let{avatar:t}=e;this._avatar.src=t}}(".profile__title",".profile__description",".profile__image");let L;v.getInitialCards().then((t=>{L=new o({items:t,renderer:t=>{const r=new e(t,"#card-template",B,C,I);L.addItems(r.getView())}},".cards__list"),L.renderItems()})),v.fetchUserInfo().then((e=>{y.setUserInfo({name:e.name,about:e.about}),y.setAvatar({avatar:e.avatar})}));const g=new s({popupSelector:"#add-card-modal"},(function(t){g.renderLoading(!0),v.addCard({name:t.name,link:t.link}).then((t=>{const r=function(t){return new e(t,"#card-template",B,C,I).getView()}(t);L.addItems(r)})).catch((e=>{console.error(e)})).finally((()=>{g.renderLoading(!1),g.close()}))})),k=new s({popupSelector:"#profile-edit-modal"},(function(e){k.renderLoading(!0),v.editUserInfo(e).then((e=>{y.setUserInfo(e)})).catch((e=>{console.error(e)})).finally((()=>{k.renderLoading(!1),k.close()}))})),q=new s({popupSelector:"#avatar-edit-modal"},(function(e){q.renderLoading(!0),v.editAvatar({avatar:e.link}).then((e=>{y.setAvatar(e)})).catch((e=>{console.error(e)})).finally((()=>{q.renderLoading(!1),q.close()}))}));function C(e){b.open(),b.setSubmitAction((()=>{v.deleteInitialCards(e.id).then((()=>{e.handleDelete(),b.close()})).catch((e=>{console.error(e)}))}))}function I(e){e.isLiked&&v.unlikeCard(e.id).then((()=>{e.handleLikeIcon()})).catch(console.error),e.isLiked||v.likeCard(e.id).then((()=>{e.handleLikeIcon()})).catch(console.error)}function B(e){f.open(e)}E.addEventListener("click",(()=>{g.open(),U.toggleButtonState()})),i.addEventListener("click",(()=>{const e=y.getUserInfo();m.value=e.name,p.value=e.about,k.open(),w.toggleButtonState()})),u.addEventListener("click",(()=>{q.open(),$.toggleButtonState()}));const w=new t(S,h),U=new t(S,_),$=new t(S,c);w.enableValidation(),U.enableValidation(),$.enableValidation(),g.setEventListeners(),k.setEventListeners(),f.setEventListeners(),b.setEventListeners(),q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekIsQ0FJQW5FLEVBQWMzRyxpQkFBaUIsU0FBUyxLQUN0Q2tLLEVBQWFyRyxPQUNia0gsRUFBaUJ0SSxtQkFBbUIsSUFHdENzRCxFQUFlL0YsaUJBQWlCLFNBQVMsS0FDdkMsTUFBTWdMLEVBQWU3QixFQUFTTyxjQUM5QmxELEVBQWtCeEIsTUFBUWdHLEVBQWE1TCxLQUN2Q3NILEVBQXdCMUIsTUFBUWdHLEVBQWFsRCxNQUM3QzRDLEVBQWlCN0csT0FDakJvSCxFQUFrQnhJLG1CQUFtQixJQUd2QzRELEVBQWFyRyxpQkFBaUIsU0FBUyxLQUNyQzRLLEVBQWdCL0csT0FDaEJxSCxFQUFvQnpJLG1CQUFtQixJQUl6QyxNQUFNd0ksRUFBb0IsSUFBSTlKLEVBQWNDLEVBQVVrRixHQUNoRHlFLEVBQW1CLElBQUk1SixFQUFjQyxFQUFVbUYsR0FDL0MyRSxFQUFzQixJQUFJL0osRUFBY0MsRUFBVWdGLEdBU3hENkUsRUFBa0I5SCxtQkFDbEI0SCxFQUFpQjVILG1CQUNqQitILEVBQW9CL0gsbUJBRXBCK0csRUFBYS9GLG9CQUNidUcsRUFBaUJ2RyxvQkFDakJnQyxFQUFrQmhDLG9CQUNsQjZFLEVBQVk3RSxvQkFDWnlHLEVBQWdCekcsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhEZWxldGUuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaywgaGFuZGxlRGVsZXRlQ2FyZCwgaGFuZGxlTGlrZUNhcmQpIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQgPSBoYW5kbGVEZWxldGVDYXJkO1xuICAgIHRoaXMuaWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLmlzTGlrZWQgPSBkYXRhLmlzTGlrZWQ7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDYXJkKHRoaXMpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzKVxuICAgICk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcylcbiAgICApO1xuICB9XG5cbiAgaGFuZGxlTGlrZUljb24oKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xuICAgIHRoaXMuaXNMaWtlZCA9ICF0aGlzLmlzTGlrZWQ7XG4gIH1cblxuICBoYW5kbGVEZWxldGUoKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgZ2V0VmlldygpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgLy9nZXQgdGhlIGNhcmQgdmlld1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgICB0aGlzLl9jYXJkVGl0bGVFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX3RpdGxlXCIpO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hbHQgPSB0aGlzLl9uYW1lICsgXCIgXCIgKyBcIkltYWdlXCI7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWwudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcIi5jYXJkX19kZWxldGUtYnV0dG9uXCJcbiAgICApO1xuICAgICAgICAvL3NldCBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgaWYgKHRoaXMuaXNMaWtlZCkge1xuICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgLy9yZXR1cm4gdGhlIGNhcmRcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuXG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbCkge1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWw7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xuICAgIHRoaXMuZXJyb3JNZXNzYWdlRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLmVycm9yTWVzc2FnZUVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIHRoaXMuZXJyb3JNZXNzYWdlRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICB0aGlzLmVycm9yTWVzc2FnZUVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5lcnJvck1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50ID0gXCIgXCI7XG4gICAgdGhpcy5lcnJvck1lc3NhZ2VFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpIHtcbiAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgICB9XG5cbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgfVxuXG4gIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XG4gICAgICB0aGlzLmRpc2FibGVCdXR0b24oKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XG4gICAgcmV0dXJuICFpbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGRpc2FibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgfSk7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCl7XG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbClcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgICB9XG5cbiAgICAgIG9wZW4oKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgICAgfVxuXG4gICAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgICB9XG5cbiAgICAgIF9oYW5kbGVFc2NDbG9zZSA9IChlKSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX29wZW5lZFwiKSkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0sIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XG4gICAgfVxuXG4gICAgb3BlbigpIHtcbiAgICAgIHN1cGVyLm9wZW4oKTtcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcbiAgICB9XG5cbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuICAgICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcbiAgICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LnRleHRDb250ZW50ID0gXCJTYXZlXCI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICAgICAgfVxuICAgIFxuICAgICAgcmVuZGVySXRlbXMoKSB7XG4gICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgXG4gICAgICBhZGRJdGVtcyhlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICAgICAgfVxuICAgIH0iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2Zvcm1cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xuZXhwb3J0IGNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItZWRpdC1tb2RhbFwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLW1vZGFsXCIpO1xuZXhwb3J0IGNvbnN0IHByZXZpZXdJbWFnZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcmV2aWV3LWltYWdlLW1vZGFsXCIpO1xuZXhwb3J0IGNvbnN0IGF2YXRhckZvcm0gPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuZXhwb3J0IGNvbnN0IGF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2UtYnV0dG9uXCIpXG5leHBvcnQgY29uc3QgcHJvZmlsZU1vZGFsQ2xvc2UgPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtbW9kYWwtY2xvc2VcIlxuKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkTW9kYWxDbG9zZSA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIiNhZGQtY2FyZC1tb2RhbC1jbG9zZVwiXG4pO1xuZXhwb3J0IGNvbnN0IHByZXZpZXdNb2RhbENsb3NlID0gcHJldmlld0ltYWdlTW9kYWwucXVlcnlTZWxlY3RvcihcbiAgXCIjcHJldmlldy1tb2RhbC1jbG9zZVwiXG4pO1xuZXhwb3J0IGNvbnN0IHByZXZpZXdJbWFnZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fcHJldmlldy1pbWFnZVwiKTtcbmV4cG9ydCBjb25zdCBwcmV2aWV3TmFtZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fcHJldmlldy1uYW1lXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIlxuKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWZvcm1cIik7XG5leHBvcnQgY29uc3QgYWRkQ2FyZEZvcm0gPSBhZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpO1xuZXhwb3J0IGNvbnN0IGNhcmRMaXN0RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZSA9XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKS5jb250ZW50LmZpcnN0RWxlbWVudENoaWxkO1xuXG5leHBvcnQgY29uc3QgYWRkTmV3Q2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiXG4pO1xuZXhwb3J0IGNvbnN0IGNhcmRUaXRsZUlucHV0ID0gYWRkQ2FyZEZvcm0ucXVlcnlTZWxlY3RvcihcbiAgXCIubW9kYWxfX2lucHV0X3R5cGVfdGl0bGVcIlxuKTtcbmV4cG9ydCBjb25zdCBjYXJkVXJsSW5wdXQgPSBhZGRDYXJkRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbnB1dF90eXBlX3VybFwiKTtcblxuZXhwb3J0IGNvbnN0IGNsb3NlQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2Nsb3NlXCIpO1xuXG5leHBvcnQgY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcblxuZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07IiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0ICcuLi9wYWdlcy9pbmRleC5jc3MnO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRGVsZXRlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aERlbGV0ZS5qc1wiXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcbmltcG9ydCB7XG4gIGluaXRpYWxDYXJkcyxcbiAgY2FyZExpc3RFbCxcbiAgcHJvZmlsZUVkaXRCdG4sXG4gIHByb2ZpbGVFZGl0Rm9ybSxcbiAgYWRkQ2FyZEZvcm0sXG4gIGFkZENhcmRNb2RhbCxcbiAgYXZhdGFyQnV0dG9uLFxuICBhZGRDYXJkQnV0dG9uLFxuICBhZGROZXdDYXJkQnV0dG9uLFxuICBwcm9maWxlVGl0bGVJbnB1dCxcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQsXG4gIGF2YXRhckZvcm0sXG4gIHNldHRpbmdzLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuXG4vL2NvbnN0IGNhcmQgPSBuZXcgQ2FyZChjYXJkRGF0YSwgJyNjYXJkLXRlbXBsYXRlJyk7XG4vL2NhcmQuX2dldFZpZXcoKTtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiNDE1OTdkZjItZWI5My00YjQxLThiZjEtZjRhNTQyYTllYTU0XCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSk7XG5cbi8vQ2xhc3MgSW5zdGFuY2VzXG5jb25zdCBwcmV2aWV3SW1hZ2VNb2RhbCA9IG5ldyBQb3B1cFdpdGhJbWFnZSh7IHBvcHVwU2VsZWN0b3I6IFwiI3ByZXZpZXctaW1hZ2UtbW9kYWxcIiB9KTtcbmNvbnN0IHBvcHVwRGVsZXRlID0gbmV3IFBvcHVwV2l0aERlbGV0ZSh7IHBvcHVwU2VsZWN0b3I6IFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIgfSk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFwiLnByb2ZpbGVfX3RpdGxlXCIsIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsIFwiLnByb2ZpbGVfX2ltYWdlXCIpO1xuXG5sZXQgc2VjdGlvbjtcblxuYXBpLmdldEluaXRpYWxDYXJkcygpLnRoZW4oKGluaXRpYWxDYXJkcykgPT4ge1xuICBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gICAge1xuICAgICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcbiAgICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xuICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgXCIjY2FyZC10ZW1wbGF0ZVwiLFxuICAgICAgICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgICAgICAgaGFuZGxlRGVsZXRlLFxuICAgICAgICAgIGhhbmRsZUxpa2VDYXJkXG4gICAgICAgICk7XG4gICAgICAgIHNlY3Rpb24uYWRkSXRlbXMoY2FyZEVsZW1lbnQuZ2V0VmlldygpKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICBcIi5jYXJkc19fbGlzdFwiXG4gICk7XG4gIHNlY3Rpb24ucmVuZGVySXRlbXMoKTtcbn0pO1xuYXBpLmZldGNoVXNlckluZm8oKS50aGVuKCh1c2VyRGF0YSkgPT4ge1xuICB1c2VySW5mby5zZXRVc2VySW5mbyh7XG4gICAgbmFtZTogdXNlckRhdGEubmFtZSxcbiAgICBhYm91dDogdXNlckRhdGEuYWJvdXQsXG4gIH0pO1xuICB1c2VySW5mby5zZXRBdmF0YXIoeyBhdmF0YXI6IHVzZXJEYXRhLmF2YXRhciB9KTtcbn0pO1xuXG4gICAgY29uc3QgYWRkQ2FyZFBvcFVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gICAgICB7IHBvcHVwU2VsZWN0b3I6IFwiI2FkZC1jYXJkLW1vZGFsXCIgfSxcbiAgICAgIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0XG4gICAgKTtcblxuICAgIGNvbnN0IGVkaXRQcm9maWxlUG9wVXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgICAgIHsgcG9wdXBTZWxlY3RvcjogXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIgfSxcbiAgICAgIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdFxuICAgICk7XG5cbiAgICBjb25zdCBlZGl0QXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgICAgIHsgcG9wdXBTZWxlY3RvcjogXCIjYXZhdGFyLWVkaXQtbW9kYWxcIiB9LFxuICAgICAgaGFuZGxlQXZhdGFyU3VibWl0XG4gICAgKTtcblxuLypGdW5jdGlvbnMqL1xuXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIixcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxuICAgIGhhbmRsZURlbGV0ZSxcbiAgICBoYW5kbGVMaWtlQ2FyZFxuICApLmdldFZpZXcoKTtcbiAgcmV0dXJuIGNhcmQ7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUF2YXRhclN1Ym1pdChpbnB1dFZhbHVlcykge1xuICBlZGl0QXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLmVkaXRBdmF0YXIoeyBhdmF0YXI6IGlucHV0VmFsdWVzLmxpbmsgfSlcbiAgICAudGhlbigobmV3QXZhdGFyKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRBdmF0YXIobmV3QXZhdGFyKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBlZGl0QXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgICBlZGl0QXZhdGFyUG9wdXAuY2xvc2UoKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGNhcmQpIHtcbiAgcG9wdXBEZWxldGUub3BlbigpO1xuICBwb3B1cERlbGV0ZS5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xuICAgIGFwaVxuICAgICAgLmRlbGV0ZUluaXRpYWxDYXJkcyhjYXJkLmlkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkLmhhbmRsZURlbGV0ZSgpO1xuICAgICAgICBwb3B1cERlbGV0ZS5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTGlrZUNhcmQoY2FyZCkge1xuICBpZiAoY2FyZC5pc0xpa2VkKSB7XG4gICAgYXBpXG4gICAgICAudW5saWtlQ2FyZChjYXJkLmlkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkLmhhbmRsZUxpa2VJY29uKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuICB9XG4gIGlmICghY2FyZC5pc0xpa2VkKSB7XG4gICAgYXBpXG4gICAgICAubGlrZUNhcmQoY2FyZC5pZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZC5oYW5kbGVMaWtlSWNvbigpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xuICBhZGRDYXJkUG9wVXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLmFkZENhcmQoe1xuICAgICAgbmFtZTogaW5wdXRWYWx1ZXMubmFtZSxcbiAgICAgIGxpbms6IGlucHV0VmFsdWVzLmxpbmssXG4gICAgfSlcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoZGF0YSk7XG4gICAgICBzZWN0aW9uLmFkZEl0ZW1zKGNhcmQpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGFkZENhcmRQb3BVcC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgIGFkZENhcmRQb3BVcC5jbG9zZSgpO1xuICAgIH0pO1xufVxuXG5cblxuLy9FdmVudCBIYW5kbGVyc1xuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0KGlucHV0VmFsdWVzKSB7XG4gIGVkaXRQcm9maWxlUG9wVXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLmVkaXRVc2VySW5mbyhpbnB1dFZhbHVlcylcbiAgICAudGhlbigobmV3VXNlckRhdGEpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKG5ld1VzZXJEYXRhKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBlZGl0UHJvZmlsZVBvcFVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICAgICAgZWRpdFByb2ZpbGVQb3BVcC5jbG9zZSgpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKGNhcmREYXRhKSB7XG4gIHByZXZpZXdJbWFnZU1vZGFsLm9wZW4oY2FyZERhdGEpO1xufVxuXG4vKkV2ZW50IExpc3RlbmVycyovXG4vL2FkZCBuZXcgQ2FyZCBidXR0b25cbmFkZENhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkQ2FyZFBvcFVwLm9wZW4oKTtcbiAgYWRkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xufSk7XG5cbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IHVzZXJJbmZvRGF0YSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gdXNlckluZm9EYXRhLm5hbWU7XG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdXNlckluZm9EYXRhLmFib3V0O1xuICBlZGl0UHJvZmlsZVBvcFVwLm9wZW4oKTtcbiAgZWRpdEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbn0pO1xuXG5hdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZWRpdEF2YXRhclBvcHVwLm9wZW4oKTtcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xufSk7XG5cblxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihzZXR0aW5ncywgcHJvZmlsZUVkaXRGb3JtKTtcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihzZXR0aW5ncywgYWRkQ2FyZEZvcm0pO1xuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBhdmF0YXJGb3JtKTtcblxuLy9mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XG4gIC8vY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xuICAvL3NlY3Rpb24uYWRkSXRlbXMoY2FyZCk7XG4vL31cblxuLy9WYWxpZGF0aW9uXG5cbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmFkZENhcmRQb3BVcC5zZXRFdmVudExpc3RlbmVycygpO1xuZWRpdFByb2ZpbGVQb3BVcC5zZXRFdmVudExpc3RlbmVycygpO1xucHJldmlld0ltYWdlTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnBvcHVwRGVsZXRlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5lZGl0QXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGl7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cbiAgZmV0Y2hVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGVkaXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFib3V0LFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZWRpdEF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbGluayxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIC8vIGlmIHRoZSBzZXJ2ZXIgcmV0dXJucyBhbiBlcnJvciwgcmVqZWN0IHRoZSBwcm9taXNlXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBkZWxldGVJbml0aWFsQ2FyZHMoY2FyZElEKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElEfWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgbGlrZUNhcmQoY2FyZElEKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElEfS9saWtlc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgdW5saWtlQ2FyZChjYXJkSUQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSUR9L2xpa2VzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcbiAgICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctaW1hZ2VcIik7XG4gICAgICB0aGlzLl9jYXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctZGVzY3JpcHRpb25cIik7XG4gICAgfVxuXG4gICAgb3BlbihkYXRhKSB7XG4gICAgICBzdXBlci5vcGVuKCk7XG4gICAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZGF0YS5fbGluayk7XG4gICAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgZGF0YS5fbmFtZSk7XG4gICAgICB0aGlzLl9jYXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5fbmFtZTtcbiAgICB9XG4gIH0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXB3aXRoRGVsZXRlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZSgpO1xuICAgICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHNldFN1Ym1pdEFjdGlvbihoYW5kbGVEZWxldGUpIHtcbiAgICB0aGlzLl9oYW5kbGVEZWxldGUgPSBoYW5kbGVEZWxldGU7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gICAgY29uc3RydWN0b3IobmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgdXNlckF2YXRhcikge1xuICAgICAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fam9iRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXIpO1xuICAgICAgfVxuXG4gICAgICBnZXRVc2VySW5mbygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgc2V0VXNlckluZm8odXNlckRhdGEpIHtcbiAgICAgICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lO1xuICAgICAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XG4gICAgICB9XG5cbiAgICAgIHNldEF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgICAgIHRoaXMuX2F2YXRhci5zcmMgPSBhdmF0YXI7XG4gICAgICB9XG4gICAgfSJdLCJuYW1lcyI6WyJDYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZURlbGV0ZUNhcmQiLCJoYW5kbGVMaWtlQ2FyZCIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2FyZCIsImlkIiwiX2lkIiwiaXNMaWtlZCIsIl9oYW5kbGVMaWtlQ2FyZCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9kZWxldGVCdXR0b24iLCJfY2FyZEltYWdlRWwiLCJoYW5kbGVMaWtlSWNvbiIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImhhbmRsZURlbGV0ZSIsIl9jYXJkRWxlbWVudCIsInJlbW92ZSIsImdldFZpZXciLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2NhcmRUaXRsZUVsIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJhZGQiLCJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWwiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9pbnB1dEVscyIsImRpc2FibGVCdXR0b24iLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJpbnB1dExpc3QiLCJldmVyeSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZW5hYmxlVmFsaWRhdGlvbiIsImV2dCIsInByZXZlbnREZWZhdWx0IiwicmVzZXRWYWxpZGF0aW9uIiwicmVzZXQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJQb3B1cCIsIl9yZWYiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRFbGVtZW50cyIsIl9idXR0b25FbGVtZW50IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJpdGVtIiwiYWRkSXRlbXMiLCJlbGVtZW50IiwicHJlcGVuZCIsInByb2ZpbGVFZGl0QnRuIiwicHJvZmlsZUVkaXRNb2RhbCIsImF2YXRhck1vZGFsIiwiYWRkQ2FyZE1vZGFsIiwicHJldmlld0ltYWdlTW9kYWwiLCJhdmF0YXJGb3JtIiwiYXZhdGFyQnV0dG9uIiwicHJvZmlsZUVkaXRGb3JtIiwiYWRkQ2FyZEZvcm0iLCJwcm9maWxlVGl0bGVJbnB1dCIsImZpcnN0RWxlbWVudENoaWxkIiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJhZGRDYXJkQnV0dG9uIiwiZm9ybVNlbGVjdG9yIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZmV0Y2hVc2VySW5mbyIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJlZGl0VXNlckluZm8iLCJfcmVmMiIsImFib3V0IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlZGl0QXZhdGFyIiwiX3JlZjMiLCJhdmF0YXIiLCJhZGRDYXJkIiwiX3JlZjQiLCJnZXRJbml0aWFsQ2FyZHMiLCJkZWxldGVJbml0aWFsQ2FyZHMiLCJjYXJkSUQiLCJsaWtlQ2FyZCIsInVubGlrZUNhcmQiLCJhdXRob3JpemF0aW9uIiwiX2ltYWdlIiwiX2NhcHRpb24iLCJzZXRBdHRyaWJ1dGUiLCJwb3B1cERlbGV0ZSIsIl9oYW5kbGVEZWxldGUiLCJzZXRTdWJtaXRBY3Rpb24iLCJ1c2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwidXNlckF2YXRhciIsIl9uYW1lRWxlbWVudCIsIl9qb2JFbGVtZW50IiwiX2F2YXRhciIsImdldFVzZXJJbmZvIiwiZGVzY3JpcHRpb24iLCJzZXRVc2VySW5mbyIsInVzZXJEYXRhIiwic2V0QXZhdGFyIiwic2VjdGlvbiIsImluaXRpYWxDYXJkcyIsImNhcmRFbGVtZW50IiwiYWRkQ2FyZFBvcFVwIiwiY2FyZCIsImNyZWF0ZUNhcmQiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImZpbmFsbHkiLCJlZGl0UHJvZmlsZVBvcFVwIiwibmV3VXNlckRhdGEiLCJlZGl0QXZhdGFyUG9wdXAiLCJuZXdBdmF0YXIiLCJjYXJkRGF0YSIsImFkZEZvcm1WYWxpZGF0b3IiLCJ1c2VySW5mb0RhdGEiLCJlZGl0Rm9ybVZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiXSwic291cmNlUm9vdCI6IiJ9