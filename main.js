!function(){"use strict";class e{constructor(e,t,r,s,i){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteCard=s,this.id=e._id,this.isLiked=e.isLiked,this._handleLikeCard=i}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard(this))),this._cardImageEl.addEventListener("click",(()=>this._handleImageClick(this)))}handleDelete(){this._cardElement.remove(),this._cardElement=null}setIsLiked(e){this._isLiked=e,this._renderLikes()}isLiked(){return this._isLiked}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._renderLikes(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class s extends r{constructor(e,t){let{popupSelector:r}=e;super({popupSelector:r}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputElements=this._popupForm.querySelectorAll(".modal__input"),this._buttonElement=this._popupForm.querySelector(".modal__button")}open(){super.open()}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}renderLoading(e){this._buttonElement.textContent=e?"Saving...":"Save"}}class i{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}document.querySelectorAll(".modal__form");const n=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),a=document.querySelector("#avatar-edit-modal"),l=document.querySelector("#add-card-modal"),d=document.querySelector("#preview-image-modal"),c=a.querySelector(".modal__form"),u=document.querySelector(".profile__image-button"),h=(o.querySelector("#profile-modal-close"),l.querySelector("#add-card-modal-close"),d.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-edit-form")),_=l.querySelector("#add-card-form"),m=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button"),document.querySelector("#profile-title-input")),p=document.querySelector("#profile-description-input"),E=(_.querySelector(".modal__input_type_title"),_.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),document.querySelector(".profile__add-button")),S={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},v=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}fetchUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}editAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}deleteInitialCards(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"PUT"}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"41597df2-eb93-4b41-8bf1-f4a542a9ea54","Content-Type":"application/json"}}),f=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-description")}open(e){super.open(),this._image.setAttribute("src",e._link),this._image.setAttribute("alt",e._name),this._caption.textContent=e._name}}({popupSelector:"#preview-image-modal"}),y=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._deletePopup=this._popupElement.querySelector("#modal__confirm"),this._buttonElement=this._deletePopup.querySelector(".modal__button")}setEventListeners(){this._popupElement.querySelector(".modal__button").addEventListener("click",(()=>{this._handleDelete()})),super.setEventListeners()}setSubmitAction(e){this._handleDelete=e}renderLoading(e){this._buttonElement.textContent=e?"Saving...":"Save"}}({popupSelector:"#delete-card-modal"}),b=new class{constructor(e,t,r){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.about}setAvatar(e){let{avatar:t}=e;this._avatar.src=t}}(".profile__title",".profile__description",".profile__image");let L;v.getInitialCards().then((t=>{L=new i({items:t,renderer:t=>{const r=new e(t,"#card-template",B,C,I);L.addItems(r.getView())}},".cards__list"),L.renderItems()})).catch((e=>{console.error(e)})),v.fetchUserInfo().then((e=>{b.setUserInfo({name:e.name,about:e.about}),b.setAvatar({avatar:e.avatar})})).catch((e=>{console.error(e)}));const k=new s({popupSelector:"#add-card-modal"},(function(t){k.renderLoading(!0),v.addCard({name:t.name,link:t.link}).then((t=>{const r=function(t){return new e(t,"#card-template",B,C,I).getView()}(t);L.addItems(r),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.renderLoading(!1)}))})),g=new s({popupSelector:"#profile-edit-modal"},(function(e){g.renderLoading(!0),v.editUserInfo(e).then((e=>{b.setUserInfo(e),g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.renderLoading(!1)}))})),q=new s({popupSelector:"#avatar-edit-modal"},(function(e){q.renderLoading(!0),v.editAvatar({avatar:e.link}).then((e=>{b.setAvatar(e),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.renderLoading(!1)}))}));function C(e){y.open(),y.setSubmitAction((()=>{y.renderLoading(!0),v.deleteInitialCards(e.id).then((()=>{e.handleDelete(),y.close()})).catch((e=>{console.error(e)})).finally((()=>{y.renderLoading(!1)}))}))}function I(e){e.isLiked&&v.unlikeCard(e.id).then((()=>{e.setIsLiked()})).catch((e=>{console.error(e)})),e.isLiked||v.likeCard(e.id).then((()=>{e.setIsLiked()})).catch((e=>{console.error(e)}))}function B(e){f.open(e)}E.addEventListener("click",(()=>{k.open(),U.toggleButtonState()})),n.addEventListener("click",(()=>{const e=b.getUserInfo();m.value=e.name,p.value=e.about,g.open(),w.toggleButtonState()})),u.addEventListener("click",(()=>{q.open(),A.toggleButtonState()}));const w=new t(S,h),U=new t(S,_),A=new t(S,c);w.enableValidation(),U.enableValidation(),A.enableValidation(),k.setEventListeners(),g.setEventListeners(),f.setEventListeners(),y.setEventListeners(),q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,