!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:n}=e;this._data={name:r,link:n},this._name=r,this._link=n,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class n extends s{constructor(e){super(e),this._deleteCardForm=this._popupElement.querySelector(".modal__container")}setEventListeners(){super.setEventListeners(),this._deleteCardForm.addEventListener("submit",(e=>{e.preventDefault(),this._deleteCcardButton.textContent="Saaving...",this._handleDeleteCardFormSubmit(),this.close()}))}setSubmitAction(e){this._handleDeleteCardFormSubmit=e}}document.querySelectorAll(".modal__form");const i=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),a=document.querySelector("#add-card-modal"),l=document.querySelector("#preview-image-modal"),c=(o.querySelector("#profile-modal-close"),a.querySelector("#add-card-modal-close"),l.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-edit-form")),d=document.querySelector("#add-card-form"),u=document.querySelector(".cards__list"),h=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),m=document.querySelector("#profile-title-input"),_=document.querySelector("#profile-description-input"),p=(d.querySelector(".modal__input_type_title"),d.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),a.querySelector("#add-modal-button"),document.querySelector("#delete-image-modal").querySelector(".modal__button"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),E=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-description")}open(e){this._image.setAttribute("src",e.link),this._image.setAttribute("alt",e.name),this._caption.textContent=e.name,super.open()}}("#preview-image-modal");E.setEventListeners();const f=new r("#add-card-modal",(function(e){console.log(e),q(e),f.close(),w.disableButton(),d.reset()}));f.setEventListeners();const S=new r("#profile-edit-modal",(function(e){I.resetValidation(),v.setUserInfo({name:e.title,description:e.description}),S.close(),I.disableButton()}));S.setEventListeners();const g=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}setItems(e){this._items=e}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:q},u),v=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.description}}(".profile__title",".profile__description"),y=new class{constructor(e){this._baseURL=e.baseURL,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseURL}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(){fetch(`${this._baseURL}/user/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:title,description:description})}).then((e=>this._checkResponse(e)))}updateAvatar(){return fetch(`${this._baseURL}/user/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:url})}).then((e=>this._checkResponse(e)))}createCards(){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then((e=>this._checkResponse(e)))}deleteCards(){return fetch(`${this._baseURL}/cards/:cardId`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCards(){return fetch(`${this._baseURL}/cards/:cardId/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}dislikeCards(){return fetch(`${this._baseURL}/cards/:cardId/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ce0e6719-cfff-44ae-95da-d365cf911af3","Content-Type":"application/json"}});function b(e){E.open(e)}function L(e){n.setSubmitAction((()=>{y.deleteCard(e._id).then((()=>{e.remove(),setTimeout((()=>{deleteCardButton.textContent="Yes"}),500)}))}))}function k(e){y.toggleCardLike(e)}function C(e){y.toggleCardDislike(e)}function q(t){const s=new e(t,"#card-template",b,L,k,C).getView();g.addItems(s)}i.addEventListener("click",(()=>{const e=v.getUserInfo();console.log(e),I.resetValidation(),m.value=e.name,_.value=e.description,S.open()})),h.addEventListener("click",(()=>{f.open()})),y.getInitialCards().then((e=>{g.setItems(e),g.renderItems()})).catch((e=>{alert(`${e} Failed to get cards.`)})),y.getUserInfo().then((e=>{v.setUserInfo({name:e.title,description:e.description})})).catch((e=>{alert(`${e} Failed to get user info.`)}));const I=new t(p,c),w=new t(p,d);I.enableValidation(),w.enableValidation(),fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"ce0e6719-cfff-44ae-95da-d365cf911af3"}}).then((e=>e.json())).then((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,