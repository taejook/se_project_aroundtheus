!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{kb:function(){return f},c$:function(){return E},bv:function(){return h},oB:function(){return i},j8:function(){return v},BU:function(){return _},gf:function(){return S},xm:function(){return a},$X:function(){return p},rY:function(){return l},k8:function(){return u},R$:function(){return y},pG:function(){return b},Ag:function(){return m},am:function(){return g},Xd:function(){return L}});class n{constructor(e,t,n){let{name:r,link:s}=e;this._data={name:r,link:s},this._name=r,this._link=s,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class r{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class o extends s{constructor(e,t,n){super({popupSelector:e}),this._inputList=this._popupElement.querySelectorAll(".modal__container-input"),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent,this._loadingButtonText=n}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const i=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],a=(document.querySelectorAll(".modal__form"),document.querySelector("#profile-edit-button")),l=document.querySelector("#profile-edit-modal"),c=(l.querySelector("modal__container-form"),document.querySelector("#add-card-modal")),d=document.querySelector("#preview-image-modal"),u=document.querySelector("#profile-image-modal"),h=(l.querySelector("#profile-modal-close"),document.querySelector("#delete-modal")),m=(c.querySelector("#add-card-modal-close"),d.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title")),_=document.querySelector(".profile__description"),p=document.querySelector("#profile-edit-form"),f=document.querySelector("#add-card-form"),E=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),g=document.querySelector("#profile-title-input"),S=document.querySelector("#profile-description-input"),y=(f.querySelector(".modal__input_type_title"),f.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),c.querySelector("#add-modal-button"),h.querySelector(".modal__button"),document.querySelector(".profile__image")),b=u.querySelector(".modal__container-input"),v="Saving...",L={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},k=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-description")}open(e){this._image.setAttribute("src",e.link),this._image.setAttribute("alt",e.name),this._caption.textContent=e.name,super.open()}}("#preview-image-modal");k.setEventListeners();const q=new o(l,(function(e){j.updateProfileInfo({name:e.title,about:e.description}).then((()=>{q.showLoading(),U.setUserInfo({nameInput:e.title,descriptionInput:e.description}),q.close()})).catch((e=>console.log(e))).finally((()=>{q.hideLoading()}))}),v),C=new o(t.cardEditModal,(function(e){console.log(e),x(e),addCardModal.close(),$.disableButton(),f.reset()}),v),w=new o(u,(function(e){y.src=b.value,j.updateProfilePic(e).then((()=>{w.showLoading(),w.close(),profileImageEditForm.reset(),addFormValidator.toggleButtonState()})).catch((e=>console.log(e))).finally((()=>{w.hideLoading()}))}),v);q.setEventListeners(),C.setEventListeners(),w.setEventListeners();const I=new class{constructor(e,t){let{items:n,renderer:r}=e;this._items=n,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:i,renderer:x},".cards__list"),B=new B(h,v);B.setEventListeners();const j=new class{constructor(e){this._baseURL=e.baseURL,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseURL}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){fetch(`${this._baseURL}/user/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:"TaeJoo Kim",description:"Software Engineer"})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseURL}/user/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:url})}).then((e=>this._checkResponse(e)))}createCards(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then((e=>this._checkResponse(e)))}deleteCards(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}dislikeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"41e13be6-9869-4779-8cec-7a871b9f5d1d","Content-Type":"application/json"}});j.getAllData().then((e=>{let[t,n]=e;renderUserInfo(t),renderCards(n)})).catch((e=>{console.error("Error fetching data:",e)})),j.getInitialCards().then((e=>{I.renderItems(e)})).catch((e=>console.log(e))),j.getUserInfo().then((e=>(U.setAvatar(e),U.setUserInfo({nameInput:e.name,descriptionInput:e.about})))).catch((e=>console.log(e)));const U=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.description}}({nameSelector:m,jobSelector:_},y);function R(e){k.open(e)}function x(e){const t=new n(e,"#card-template",R).getView();I.addItems(t)}a.addEventListener("click",(()=>{const e=U.getUserInfo();console.log(e),T.resetValidation(),g.value=e.name,S.value=e.description,l.open()})),E.addEventListener("click",(()=>{addCardModal.open()}));const T=new r(L,p),$=new r(L,f);T.enableValidation(),$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,