!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{kb:function(){return g},c$:function(){return E},bA:function(){return c},bv:function(){return m},oB:function(){return i},j8:function(){return L},BU:function(){return p},gf:function(){return S},xm:function(){return a},$X:function(){return f},rY:function(){return l},k8:function(){return h},R$:function(){return v},pG:function(){return b},Ag:function(){return _},am:function(){return y},Xd:function(){return k}});class n{constructor(e,t,n){let{name:r,link:s}=e;this._data={name:r,link:s},this._name=r,this._link=s,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class r{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){this._popupElement=e}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class o extends s{constructor(e,t,n){super({popupSelector:e}),this._inputList=this._popupElement.querySelectorAll(".modal__container-input"),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent,this._loadingButtonText=n}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const i=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],a=(document.querySelectorAll(".modal__form"),document.querySelector("#card-modal"),document.querySelector("#profile-edit-button")),l=document.querySelector("#profile-edit-modal"),c=l.querySelector("modal__container-form"),d=document.querySelector("#add-card-modal"),u=document.querySelector("#preview-image-modal"),h=document.querySelector("#profile-image-modal"),m=(l.querySelector("#profile-modal-close"),document.querySelector("#delete-modal")),_=(d.querySelector("#add-card-modal-close"),u.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title")),p=document.querySelector(".profile__description"),f=document.querySelector("#profile-edit-form"),g=document.querySelector("#add-card-form"),E=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),y=document.querySelector("#profile-title-input"),S=document.querySelector("#profile-description-input"),v=(g.querySelector(".modal__input_type_title"),g.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),d.querySelector("#add-modal-button"),m.querySelector(".modal__button"),document.querySelector(".profile__image")),b=h.querySelector(".modal__container-input"),L="Saving...",k={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},q=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-description")}open(e){this._image.setAttribute("src",e.link),this._image.setAttribute("alt",e.name),this._caption.textContent=e.name,super.open()}}("#preview-image-modal");q.setEventListeners();const C=new o(l,(function(e){U.updateUserInfo({title:e.title,description:e.description}).then((()=>{C.showLoading(),R.setUserInfo({nameInput:e.title,descriptionInput:e.description}),C.close()})).catch((e=>console.log(e))).finally((()=>{C.hideLoading()}))}),L),w=new o(t.cardEditModal,(function(e){const t=e.title,n=e.description;U.addCard({name:t,link:n}).then((()=>{w.showLoading(),V({name:t,link:n}),w.close(),c.reset(),addFormValidator.toggleButtonState()})).catch((e=>console.log(e))).finally((()=>{w.hideLoading()}))}),L),I=new o(h,(function(e){v.src=b.value,U.updateProfilePic(e).then((()=>{I.showLoading(),I.close(),profileImageEditForm.reset(),addFormValidator.toggleButtonState()})).catch((e=>console.log(e))).finally((()=>{I.hideLoading()}))}),L);C.setEventListeners(),w.setEventListeners(),I.setEventListeners();const B=new class{constructor(e,t){let{items:n,renderer:r}=e;this._items=n,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:i,renderer:V},".cards__list"),j=new j(m,L);j.setEventListeners();const U=new class{constructor(e){this._baseURL=e.baseURL,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseURL}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){fetch(`${this._baseURL}/user/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:"TaeJoo Kim",description:"Software Engineer"})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseURL}/user/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:url})}).then((e=>this._checkResponse(e)))}createCards(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then((e=>this._checkResponse(e)))}deleteCards(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}dislikeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"41e13be6-9869-4779-8cec-7a871b9f5d1d","Content-Type":"application/json"}});U.getInitialCards().then((e=>{B.renderItems(e)})).catch((e=>console.log(e))),U.getUserInfo().then((e=>(R.setAvatar(e),R.setUserInfo({nameInput:e.title,descriptionInput:e.description})))).catch((e=>console.log(e)));const R=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.description}}({nameSelector:_,jobSelector:p},v);function x(e){q.open(e)}function T(e){j.open(),j.setSubmitAction((()=>(j.showLoading(),U.deleteCards(e._id).then((()=>{e.remove()})).catch((e=>console.log(e))).finally((()=>{j.hideLoading()})))))}function $(e){return U.toggleCardLike(e)}function A(e){return U.toggleCardDislike(e)}function V(e){const t=new n(e,".card-template",x,T,$,A).getview();B.addItem(t)}a.addEventListener("click",(()=>{const e=R.getUserInfo();console.log(e),M.resetValidation(),y.value=e.name,S.value=e.description,l.open()})),E.addEventListener("click",(()=>{addCardModal.open()}));const M=new r(k,f),P=new r(k,g);M.enableValidation(),P.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,