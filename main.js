!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:o}=e;this._data={name:n,link:o},this._name=n,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name+" Image",this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageElement.textContent=e.validationMessage,this.errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageElement.textContent=" ",this.errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){this._popupElement=e,this._closeButton=document.querySelector("#profile-edit-close"),this._modalContainer=document.querySelector(".modal__container")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class n extends s{constructor(e,t,s){super(e),this._submitButton=document.querySelector(".modal__button"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent,this._loadingButtonText=s,this._popupForm=document.querySelector(".modal__container-form"),this._inputList=document.querySelectorAll(".modal__container-input")}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}document.querySelectorAll(".modal__form"),document.querySelector("#card-modal");const o=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),i=r.querySelector("modal__container-form"),a=document.querySelector("#add-card-modal"),l=document.querySelector("#preview-image-modal"),c=document.querySelector("#profile-image-modal"),d=(r.querySelector("#profile-modal-close"),document.querySelector("#delete-modal")),u=(a.querySelector("#add-card-modal-close"),l.querySelector("#preview-modal-close"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title")),h=document.querySelector(".profile__description"),m=document.querySelector("#profile-edit-form"),_=document.querySelector("#add-card-form"),p=document.querySelector(".cards__list"),E=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),g=document.querySelector("#profile-title-input"),f=document.querySelector("#profile-description-input"),S=(_.querySelector(".modal__input_type_title"),_.querySelector(".modal__input_type_url"),document.querySelectorAll(".modal__close"),a.querySelector("#add-modal-button"),d.querySelector(".modal__button"),document.querySelector(".profile__image")),y=c.querySelector(".modal__container-input"),v="Saving...",L={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};new class extends s{constructor(e){super(e),console.log(`Popup element for selector "${e}":`,this._popupElement)}open(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__image-description");t.src=e.link,t.alt=e.name,s.textContent=e.name,super.open()}}(l).setEventListeners();const b=new n("#profile-edit-modal",(function(e){I.updateUserInfo({title:e.title,description:e.description}).then((()=>{b.showLoading(),B.setUserInfo({nameInput:e.title,descriptionInput:e.description}),b.close()})).catch((e=>console.log(e))).finally((()=>{b.hideLoading()}))}),v),k=new n("#card-modal",(function(e){const t=e.title,s=e.description;I.addCard({name:t,link:s}).then((()=>{k.showLoading(),T({name:t,link:s}),k.close(),i.reset(),addFormValidator.toggleButtonState()})).catch((e=>console.log(e))).finally((()=>{k.hideLoading()}))}),v),q=new n("#preview-image-modal",(function(e){S.src=y.value,I.updateProfilePic(e).then((()=>{q.showLoading(),q.close(),profileImageEditForm.reset(),addFormValidator.toggleButtonState()})).catch((e=>console.log(e))).finally((()=>{q.hideLoading()}))}),v);b.setEventListeners(),k.setEventListeners(),q.setEventListeners();const C=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:T},".cards__list"),w=new w(d,v);w.setEventListeners();const I=new class{constructor(e){this._baseURL=e.baseURL,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseURL}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){fetch(`${this._baseURL}/user/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:"TaeJoo Kim",description:"Software Engineer"})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseURL}/user/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:url})}).then((e=>this._checkResponse(e)))}createCards(e){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then((e=>this._checkResponse(e)))}deleteCards(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}dislikeCards(e){return fetch(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"41e13be6-9869-4779-8cec-7a871b9f5d1d","Content-Type":"application/json"}});I.getInitialCards().then((e=>{C.renderItems(e)})).catch((e=>{console.log(e)})),I.getUserInfo().then((e=>(B.setAvatar(e),B.setUserInfo({nameInput:e.title,descriptionInput:e.description})))).catch((e=>{console.log(e)}));const B=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.description}}({nameSelector:u,jobSelector:h},S);function U(e){l.open(e)}function j(e){w.open(),w.setSubmitAction((()=>(w.showLoading(),I.deleteCards(e._id).then((()=>{e.remove()})).catch((e=>console.log(e))).finally((()=>{w.hideLoading()})))))}function R(e){return I.toggleCardLike(e)}function x(e){return I.toggleCardDislike(e)}function T(t){const s=new e(t,".card-template",U,j,R,x).getView();return C.addItems(s),Promise.all(B,p)}o.addEventListener("click",(()=>{const e=B.getUserInfo();console.log(e),V.resetValidation(),g.value=e.name,f.value=e.description,r.open()})),E.addEventListener("click",(()=>{addCardModal.open()}));const V=new t(L,m),$=new t(L,_);V.enableValidation(),$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,